<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
<!-- the file name should be based on the convention "servletname-servlet.xml" this is what the DispatcherServlet looks for loading(Which avoids the use of ApplicationConext ctxt=new Appli line which we use usually -->
<!-- By this line, Spring is going to scan all the classes within this package and all its dependencies for Spring  managed beans which is identified by the annotations like @Repository, @Component, @Controller, @Service -->

<context:component-scan base-package="com.training"></context:component-scan>
<!-- By this line, we say that there are validators to register and load. It even does a lot too -->

<mvc:annotation-driven/>
<!-- This is a convention over configuration. Irrespective of the number of jsp's we have(even 1000's). The same configuration is used -->

<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="WEB-INF/jsp"></property>
<property name="suffix" value=".jsp"></property>
</bean>

</beans>
